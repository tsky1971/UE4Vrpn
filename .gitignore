#
# This file tells Git about engine files that never really belong in source control. They are usually build products, log
# files and intermediate files generated from a compiler or the engine runtime.
#
#
# NOTE:
# Paths that start with / match paths relative to the root (where the .gitignore file is)
# Paths that end with / will match a folder and all files under it (but not a regular file with no extension)
# Use * for wildcards. Wildcards stop at path separators
# Use ** for a wildcard that spans path separators
# Paths in this file should use forward slash characters, not back slashes
# Use \ to escape special characters like ! and #
# Use ! to negate a previous pattern. But it doesn't work if the parent sub-folder was masked out already.
#
#
#
#
#

# Ignore all files by default, but scan all directories
#*
!*/

!*.uproject
!*.pro
build*
*.pro.user
.qmake.stash
Makefile
Makefile.*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.tlog
*.idb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Ignore project files in the root
*.sln
*.xcodeproj
*/*.sln
*/*.xcodeproj

# Ignore local user Visual Studio files in any folder
*.suo

# Ignore intermediate folders from Xcode
# TODO: This section can be removed after UnrealBuildTool has been changed to generated Xcode projects that force the 'build' directory to be created under the Intermediate folder instead.
build/**
*/build/**

# Derived data cache is never checked in
/DerivedDataCache
/DerivedDataCache/**
*/DerivedDataCache/**

# Engine intermediates
/Intermediate
/Intermediate/**
/Plugins/**/Intermediate/**

# Exclude executable binaries too (game DLLs)
/Binaries
/Binaries/**
!/Plugins/**/Binaries/**
!/Plugins/**/Binaries/ThirdParty/**/x64/**
!/Plugins/**/Binaries/ThirdParty/**

# Ignore any saved local files
/Saved
*/Saved/**

# Ignore SVN files
.svn

#Ignore binaries
*.exe
*.app

#Ignore debug data files
*.pdb
*.exp

/.project

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
![Dd]ebug/
![Dd]ebugPublic/
![Rr]elease/
![Rr]eleases/
!x64/
!x86/
bld/
![Bb]in/
[Oo]bj/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files

# Visual Studio profiler

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Windows Store app package directory
AppPackages/
BundleArtifacts/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/
*.VC.db
